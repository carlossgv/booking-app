// This is you Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model LocationUser {
  locationUserId     Int           @id @default(autoincrement())
  userId             Int
  isActive           Boolean
  Reservations       Reservation[]
  Location           Location      @relation(fields: [locationLocationId], references: [locationId])
  locationLocationId Int
}

model CompanyUser {
  companyUserId    Int     @id @default(autoincrement())
  userId           Int     @unique
  isActive         Boolean
  Company          Company @relation(fields: [companyCompanyId], references: [companyId])
  companyCompanyId Int
}

model Company {
  companyId Int           @id @default(autoincrement())
  name      String
  address   String?
  email     String?
  isActive  Boolean       @default(true)
  managers  CompanyUser[]
  locations Location[]
}

model Location {
  locationId       Int            @id @default(autoincrement())
  name             String
  address          String?
  phone            String?
  email            String?
  locationType     LocationType   @default(other)
  isActive         Boolean        @default(true)
  userType         UserType       @default(client)
  schedules        Schedule[]
  users            LocationUser[]
  Company          Company        @relation(fields: [companyCompanyId], references: [companyId])
  companyCompanyId Int

  @@unique([name])
}

enum LocationType {
  restaurant  @map("Restaurant")
  bar         @map("Bar")
  cafe        @map("Cafe")
  gym         @map("Gym")
  other       @map("Other")
}

enum UserType {
  patient  @map("Patient")
  client   @map("Client")
  guest    @map("Guest")
}

model Reservation {
  reservationId      Int          @id @default(autoincrement())
  date               DateTime
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  locationId         Int
  userLocationUserId Int
  Schedule           Schedule?    @relation(fields: [scheduleScheduleId], references: [scheduleId])
  scheduleScheduleId Int?
  user               LocationUser @relation(fields: [userId], references: [locationUserId])
  userId             Int
}

model Schedule {
  scheduleId         Int           @id @default(autoincrement())
  date               DateTime
  initialTime        Int
  finishTime         Int
  maxReservations    Int
  repeatition        Repeatition   @default(none)
  endDate            DateTime?
  Location           Location?     @relation(fields: [locationLocationId], references: [locationId])
  locationLocationId Int?
  reservations       Reservation[]
}

enum Repeatition {
  none         @map("None")
  daily        @map("Daily")
  weekly       @map("Weekly")
  monthly      @map("Monthly")
  montofriday  @map("Monday to Friday")
}
